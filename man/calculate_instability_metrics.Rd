% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accessors.R
\name{calculate_instability_metrics}
\alias{calculate_instability_metrics}
\title{Calculate Repeat Instability Metrics}
\usage{
calculate_instability_metrics(
  fragments_list,
  grouped = FALSE,
  peak_threshold = 0.05,
  window_around_main_peak = c(NA, NA),
  percentile_range = c(0.5, 0.75, 0.9, 0.95),
  repeat_range = c(2, 5, 10, 20),
  index_override_dataframe = NULL
)
}
\arguments{
\item{fragments_list}{A list of "fragments_repeats" class objects representing fragment data.}

\item{grouped}{Logical value indicating whether samples should be grouped to share a common index peak. Useful for cases like inferring repeat size of inherited alleles from mouse tail data. Requires metadata via \code{add_metadata()}.}

\item{peak_threshold}{The threshold for peak heights to be considered in the calculations, relative to the modal peak height of the expanded allele.}

\item{window_around_main_peak}{A numeric vector (length = 2) defining the range around the index peak. First number specifies repeats before the index peak, second after. For example, \code{c(-5, 40)} around an index peak of 100 would analyze repeats 95 to 140.}

\item{percentile_range}{A numeric vector of percentiles to compute (e.g., c(0.5, 0.75, 0.9, 0.95)).}

\item{repeat_range}{A numeric vector specifying ranges of repeats for the inverse quantile computation.}

\item{index_override_dataframe}{A data.frame to manually set index peaks. Column 1: unique sample IDs, Column 2: desired index peaks. Closest peak in each sample is selected.}
}
\value{
A data.frame with calculated instability metrics for each sample.
}
\description{
This function computes instability metrics from a list of fragments_repeats data objects.
}
\examples{
gm_raw <- instability::example_data
metadata <- instability::metadata

test_fragments <- peak_table_to_fragments(gm_raw,
  data_format = "genemapper5",
  dye_channel = "B",
  min_size_bp = 400
)

test_metadata <- add_metadata(
  fragments_list = test_fragments,
  metadata_data.frame = metadata,
  unique_id = "unique_id",
  plate_id = "plate_id",
  group_id = "cell_line",
  metrics_baseline_control = "metrics_baseline_control_TF",
  size_standard = "repeat_positive_control_TF",
  size_standard_repeat_length = "repeat_positive_control_length"
)

test_alleles <- find_alleles(
  fragments_list = test_metadata,
  number_of_peaks_to_return = 1,
  peak_region_size_gap_threshold = 6,
  peak_region_height_threshold_multiplier = 1
)


test_repeats <- call_repeats(
  fragments_list = test_alleles,
  repeat_calling_algorithm = "simple",
  assay_size_without_repeat = 87,
  repeat_size = 3,
  repeat_length_correction = "none"
)

# grouped metrics
# uses t=0 samples as indicated in metadata
test_metrics_grouped <- calculate_instability_metrics(
  fragments_list = test_repeats,
  grouped = TRUE,
  peak_threshold = 0.05,
  window_around_main_peak = c(-40, 40),
  percentile_range = c(0.5, 0.75, 0.9, 0.95),
  repeat_range = c(2, 5, 10, 20)
)
}
